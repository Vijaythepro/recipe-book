{"version":3,"sources":["./src/app/recepies/recepie-home/recepie-home.component.ts","./src/app/recepies/recepie-home/recepie-home.component.html","./src/app/shared/service/data-resolver.service.ts","./src/app/auth/auth-gaurd.service.ts","./src/app/recepies/recepie.module.ts","./src/app/recepies/recepie-details/recepie-details.component.html","./src/app/recepies/recepie-details/recepie-details.component.ts","./src/app/recepies/recipe-edit/recipe-edit.component.ts","./src/app/recepies/recipe-edit/recipe-edit.component.html","./src/app/recepies/recepies/recepies.component.ts","./src/app/recepies/recepies/recepies.component.html","./src/app/recepies/recepie-routing.module.ts","./src/app/recepies/recepie-list/recepie-item/recepie-item.component.ts","./src/app/recepies/recepie-list/recepie-item/recepie-item.component.html","./src/app/recepies/recepie-list/recepie-list.component.html","./src/app/recepies/recepie-list/recepie-list.component.ts"],"names":[],"mappings":"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","file":"recepies-recepie-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-recepie-home',\r\n  templateUrl: './recepie-home.component.html',\r\n  styleUrls: ['./recepie-home.component.scss']\r\n})\r\nexport class RecepieHomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h3>Please select a recepie</h3>\r\n    ","import { RecepieService } from './recepie.service';\r\nimport { Recepie } from './../../recepies/model/recepie.model';\r\nimport { DataStorageService } from './data-storage.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataResolverService implements Resolve<Recepie[]> {\r\n\r\n  constructor(private dataStorageService: DataStorageService, private recepieService: RecepieService){ }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    const recepie = this.recepieService.getRecepie();\r\n    if(recepie.length ===0){\r\n       console.log(\"resolve method calling\");\r\n      return this.dataStorageService.fetchStorage();\r\n    }\r\n   else{\r\n     return recepie;\r\n   }\r\n\r\n    \r\n  }\r\n}\r\n","import { AuthService } from './../shared/service/auth.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, tap, take } from 'rxjs/operators';\r\n\r\n@Injectable({ providedIn: 'root' })\r\n\r\nexport class AuthGaurd implements CanActivate {\r\n    constructor(private authService: AuthService, private router: Router) { }\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):\r\n        boolean | Observable<boolean | UrlTree> | Promise<boolean> {\r\n        return this.authService.user.pipe(take(1) ,map(user =>{\r\n            if(user){\r\n                return !!user;\r\n            }\r\n               return this.router.createUrlTree(['/auth']);         \r\n        }))\r\n    }\r\n}","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { RecepieDetailsComponent } from './recepie-details/recepie-details.component';\r\nimport { RecepieItemComponent } from './recepie-list/recepie-item/recepie-item.component';\r\nimport { RecepieHomeComponent } from './recepie-home/recepie-home.component';\r\nimport { RecepieListComponent } from './recepie-list/recepie-list.component';\r\nimport { RecipeEditComponent } from './recipe-edit/recipe-edit.component';\r\nimport { RecepiesComponent } from './recepies/recepies.component';\r\nimport { RecepieRoutingModule } from './recepie-routing.module';\r\n\r\n@NgModule({\r\n    declarations: [ \r\n        RecepiesComponent,\r\n        RecipeEditComponent,\r\n        RecepieListComponent,\r\n        RecepieHomeComponent,\r\n        RecepieDetailsComponent,\r\n        RecepieItemComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        RecepieRoutingModule,\r\n        FormsModule,\r\n        ReactiveFormsModule\r\n    ]\r\n})\r\nexport class RecepieModule{}","<p>recepie-details works!</p>\r\n<div class=\"row\">\r\n    <div class=\"col-xs-12\">\r\n        <img [src]=\"recepieDetailsReceived.imgPath\" alt=\"\" class=\"img-responsive\" style=\"max-height:150px;\">\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-xs-12\">\r\n        <h1>{{recepieDetailsReceived.name}}</h1>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-xs-12\">\r\n        <!-- Example single danger button -->\r\n        <div class=\"btn-group\">\r\n            <button type=\"button\" class=\"btn btn-info dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" >\r\n    Manage\r\n  </button>\r\n            <ul class=\"dropdown-menu\">\r\n                <li><a class=\"dropdown-item\" (click)=\"onManageClick($event)\">Shopping list</a></li>\r\n                <li><a class=\"dropdown-item\" (click)=\"onEditClick()\" >Edit recipe</a></li>\r\n                <li><a class=\"dropdown-item\" (click)=\"onDeleteClick()\" >Delete recipe</a></li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-xs-12\">\r\n        {{recepieDetailsReceived.description}}\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-xs-12\">\r\n        <ul class=\"list-group\">\r\n            <li class=\"list-group-item\" *ngFor=\"let ingrideint of recepieDetailsReceived.ingredients\">{{ingrideint.name}} -{{ingrideint.amount}}</li>\r\n        </ul>\r\n    </div>\r\n</div>","import { Ingredients } from './../../shared/ingredients.model';\r\nimport { RecepieService } from './../../shared/service/recepie.service';\r\nimport { Recepie } from './../model/recepie.model';\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-recepie-details',\r\n  templateUrl: './recepie-details.component.html',\r\n  styleUrls: ['./recepie-details.component.scss']\r\n})\r\nexport class RecepieDetailsComponent implements OnInit {\r\n\r\n  recepieDetailsReceived!: Recepie;\r\n  id!: number;\r\n  constructor(private recepieService: RecepieService,\r\n              private route: ActivatedRoute,\r\n              private router: Router) {\r\n\r\n              }\r\n\r\n  ngOnInit(): void{\r\n    /*\r\n    this line also can get the id, but in runtime, if param changes it will not able to detect\r\n     this.id = this.route.snapshot.params[' id '];\r\n     */\r\n     this.route.params.subscribe(\r\n          (param: Params) => {\r\n                this.id = +param['id'];\r\n                this.recepieDetailsReceived = this.recepieService.getRecipeById(this.id);\r\n            console.log(\"recepie details component\");\r\n            });\r\n  }\r\n\r\n  onManageClick(e: any){\r\n    this.recepieService.addRecepieIngredients(this.recepieDetailsReceived.ingredients)\r\n  }\r\n\r\n  onEditClick() {\r\n      this.router.navigate(['edit'], {relativeTo: this.route});\r\n    // this.router.navigate(['../', this.id, 'edit'], {relativeTo: this.route})\r\n  }\r\n\r\n  onDeleteClick() {\r\n    this.recepieService.deleteRecepie(this.id);\r\n    this.router.navigate(['/recipes'], {relativeTo: this.route});\r\n  }\r\n\r\n}\r\n","import { Recepie } from './../model/recepie.model';\r\nimport { RecepieService } from './../../shared/service/recepie.service';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, FormsModule, FormArray, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-recipe-edit',\r\n  templateUrl: './recipe-edit.component.html',\r\n  styleUrls: ['./recipe-edit.component.scss']\r\n})\r\nexport class RecipeEditComponent implements OnInit {\r\n\r\n  id!: number;\r\n  editMode = false;\r\n  recipieForm!: FormGroup;\r\n  constructor(private route: ActivatedRoute,\r\n              private receipeService: RecepieService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe(\r\n      (param: Params) => {\r\n        this.id = +param['id'];\r\n        this.editMode = param['id'] != null;\r\n        this.initForm();\r\n      }\r\n    );\r\n  }\r\n\r\n  initForm(): void {\r\n    let recepieName = '';\r\n    let recepieImg = '';\r\n    let recepieDesc = '';\r\n    let recepieIngridient = new FormArray([]);\r\n    if (this.editMode){\r\n      const recepie = this.receipeService.getRecipeById(this.id);\r\n      recepieName = recepie.name;\r\n      recepieImg = recepie.imgPath;\r\n      recepieDesc = recepie.description;\r\n\r\n      if (recepie['ingredients']){\r\n        for (let ingredient of recepie.ingredients){\r\n          recepieIngridient.push(\r\n            new FormGroup({\r\n              'name': new FormControl(ingredient.name, Validators.required),\r\n              'amount': new FormControl(ingredient.amount, [Validators.required, Validators.pattern('[1-9]*')])\r\n            })\r\n          );\r\n        }\r\n      }\r\n    }\r\n// *ngFor=\"let ingredient of recipieForm.get('ingridient'); let i=index\" [formGroupName]='i'\r\n    this.recipieForm = new FormGroup({\r\n      'name': new FormControl(recepieName, Validators.required),\r\n      'imgPath': new FormControl(recepieImg, Validators.required),\r\n      'description': new FormControl(recepieDesc, Validators.required),\r\n      'ingredients': recepieIngridient\r\n    });\r\n\r\n  }\r\n\r\n  get controls() { // a getter!\r\n     return (<FormArray>this.recipieForm.get('ingredients')).controls;\r\n\r\n     \r\n}\r\n\r\nonAddIngridient(): void {\r\n  (<FormArray>this.recipieForm.get('ingredients')).push(\r\n     new FormGroup({\r\n        'name': new FormControl(null, Validators.required),\r\n        'amount': new FormControl(null, [Validators.required, Validators.pattern('[1-9]*')])\r\n      })\r\n  );\r\n}\r\n\r\nonSubmit(): void{\r\n  console.log(this.recipieForm);\r\n  if (this.editMode) {\r\n    this.receipeService.updateRecepie(this.id, this.recipieForm.value);\r\n  } else {\r\n    this.receipeService.addRecepie(this.recipieForm.value);\r\n  }\r\n  this.onCancelClick();\r\n}\r\n\r\nonCancelClick(): void {\r\n  this.router.navigate(['../'], {relativeTo: this.route});\r\n}\r\n\r\nonRemoveIng(i: number) {\r\n  (<FormArray>this.recipieForm.get('ingredients')).removeAt(i);\r\n}\r\n\r\n\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <form [formGroup]='recipieForm' (ngSubmit)='onSubmit()'>\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <button class=\"btn btn-success me-2\" type=\"submit\" [disabled]=\"!recipieForm.valid\">save</button>\r\n                    <button class=\"btn btn-danger\" type=\"button\" (click)=\"onCancelClick()\">cancel</button>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"name\" class=\"form-label\">Name</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"name\" aria-describedby=\"\"\r\n                         name=\"name\" formControlName='name'>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"imgPath\" class=\"form-label\">Image URL</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"imgPath\" aria-describedby=\"\" \r\n                        name=\"impgPath\" formControlName='imgPath' #image> \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <img [src]=\"image.value\" alt=\"\" class=\"img-responsive\" style=\"max-height:75px;margin-top: 10px;\">\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"desc\" class=\"form-label\">Description</label>\r\n                        <textarea type=\"text\" class=\"form-control\" id=\"desc\" aria-describedby=\"\" \r\n                        name=\"desc\" rows=\"5\" formControlName='description'>\r\n                        </textarea>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row mt-3\" formArrayName=\"ingredients\" >\r\n                <div class=\"col-12\" >\r\n                    <div class=\"row\" *ngFor=\"let ing of controls; let i=index\" [formGroupName]='i' style=\"margin-top: 10px\">\r\n                        <div class=\"col-8\">\r\n                            <input type=\"text\" class=\"form-control\" formControlName = 'name'> \r\n                        </div>\r\n                        <div class=\"col-2\">\r\n                            <input type=\"number\" class=\"form-control\" formControlName = 'amount'>\r\n                        </div>\r\n                        <div class=\"col-2\">\r\n                            <button type=\"button\" class=\"btn btn-danger\" (click)=\"onRemoveIng(i)\">X</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12\" style=\"margin-top:15px;\">\r\n                    <button class=\"btn btn-success\" (click)=\"onAddIngridient()\" type=\"button\">Add Ingredient</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { RecepieService } from './../../shared/service/recepie.service';\r\nimport { Recepie } from './../model/recepie.model';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs'; \r\n\r\n@Component({\r\n  selector: 'app-recepies',\r\n  templateUrl: './recepies.component.html',\r\n  styleUrls: ['./recepies.component.scss']\r\n})\r\nexport class RecepiesComponent implements OnInit, OnDestroy {\r\n\r\n  // recepieDetails:Recepie = {} as Recepie;\r\n  // showSelectedRecepie:boolean = false;\r\n  recepieSelectedSubscription!: Subscription;\r\n  constructor(private recepieService: RecepieService) { }\r\n\r\n  ngOnInit(): void {\r\n /*the code below is to emit the selected to details component, this can be achivey by routing\r\n   this.recepieSelectedSubscription = this.recepieService.recepieSelected.subscribe(\r\n      (recepie:Recepie)=>{\r\n        this.recepieDetails = recepie;\r\n        this.showSelectedRecepie = true;\r\n      }\r\n    ) */\r\n\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void{\r\n    // this.recepieSelectedSubscription.unsubscribe();\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    \r\n    <div class=\"col-md-5 mt-2\">\r\n        <app-recepie-list></app-recepie-list>\r\n    </div>\r\n    <div class=\"col-md-7 mt-4\">\r\n\r\n        <!-- before routing -->\r\n        <!-- <div *ngIf=\"showSelectedRecepie; then recepieBlock else noBlock\"></div>\r\n        <ng-template #recepieBlock>\r\n            <app-recepie-details [recepieDetailsReceived]=\"recepieDetails\" ></app-recepie-details>\r\n        </ng-template>\r\n        <ng-template #noBlock>\r\n           <p>No recepie were added!</p>\r\n        </ng-template> -->\r\n       <router-outlet></router-outlet>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { DataResolverService } from './../shared/service/data-resolver.service';\r\nimport { RecepieDetailsComponent } from './recepie-details/recepie-details.component';\r\nimport { RecipeEditComponent } from './recipe-edit/recipe-edit.component';\r\nimport { RecepieHomeComponent } from './recepie-home/recepie-home.component';\r\nimport { AuthGaurd } from './../auth/auth-gaurd.service';\r\nimport { RecepiesComponent } from './recepies/recepies.component';\r\n\r\n\r\nconst route: Routes =[\r\n    {path: '', canActivate: [AuthGaurd], component: RecepiesComponent, children: [\r\n    {path: '', component: RecepieHomeComponent},\r\n    {path: 'new', component: RecipeEditComponent},\r\n    {path: ':id', component: RecepieDetailsComponent, resolve: [DataResolverService]},\r\n    {path: ':id/edit', component: RecipeEditComponent, resolve: [DataResolverService]}\r\n  ]}\r\n]\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(route)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class RecepieRoutingModule {}","import { RecepieService } from './../../../shared/service/recepie.service';\r\nimport { Recepie } from './../../model/recepie.model';\r\nimport { Component, OnInit, Input, ViewChild, AfterViewInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-recepie-item',\r\n  templateUrl: './recepie-item.component.html',\r\n  styleUrls: ['./recepie-item.component.scss']\r\n})\r\nexport class RecepieItemComponent implements OnInit{\r\n\r\n  @Input() recepieItem:Recepie = {} as Recepie;\r\n  @Input() index!: number;\r\n\r\n  constructor(private recepieService: RecepieService) {\r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  recepieItemClicked() {\r\n    // this.recepieService.recepieSelected.next(this.recepieItem);\r\n  }\r\n\r\n }","<li class=\"list-group-item d-flex justify-content-between align-items-start\"\r\n (click)=\"recepieItemClicked()\" #recepieValue [routerLink]='[index]' routerLinkActive=\"active\">\r\n    <div class=\"ms-2 me-auto\">\r\n        <div class=\"fw-bold\" >{{recepieItem.name}}</div>\r\n     {{recepieItem.description}}\r\n    </div>\r\n    <div>\r\n        <span>\r\n            <img [src]=\"recepieItem.imgPath\" alt=\"\" class=\"img-responsive\" style=\"max-height:50px;\">\r\n        </span>\r\n    </div>\r\n\r\n</li>","<div class=\"row\">\r\n    <div class=\"col-xs-12 mt-2 mb-2\">\r\n        <div class=\"btn btn-success\" (click)='onAddNewRecipe()'>New recepie</div>\r\n    </div>\r\n</div>\r\n<div class=\"row mt-2\">\r\n    <div class=\"col-xs-12\">\r\n        <app-recepie-item *ngFor=\"let recepie of recepies; let i = index\" [recepieItem]=\"recepie\" [index]=\"i\"></app-recepie-item>\r\n    </div>\r\n</div>","import { Subscription } from 'rxjs';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { RecepieService } from './../../shared/service/recepie.service';\r\nimport { Recepie } from './../model/recepie.model';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-recepie-list',\r\n  templateUrl: './recepie-list.component.html',\r\n  styleUrls: ['./recepie-list.component.scss']\r\n})\r\nexport class RecepieListComponent implements OnInit, OnDestroy {\r\n\r\n\r\n  recepies!: Recepie[];\r\n  recepieSubscription!: Subscription;\r\n\r\n  constructor(private recepieService: RecepieService,\r\n              private router: Router,\r\n              private route: ActivatedRoute) {\r\n   }\r\n\r\n  ngOnInit(): void {\r\n \r\n   this.recepies = this.recepieService.getRecepie();\r\n   this.recepieSubscription = this.recepieService.recepieAdded.subscribe(\r\n     (recepie: Recepie[]) => {\r\n      this.recepies = recepie;\r\n     }\r\n   );\r\n  }\r\n\r\n  onAddNewRecipe(){\r\n    this.router.navigate(['new'], {relativeTo: this.route});\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.recepieSubscription.unsubscribe();\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}